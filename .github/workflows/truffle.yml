name: DefectDojo Secret Scan Upload (TruffleHog - Auto Create Product & Engagement)

on:
  push:
    branches:
      - '**'
  workflow_dispatch:

jobs:
  defectdojo-upload:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout Code
      - name: Checkout code repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      # 2. Validate Secrets
      - name: Validate Secrets
        run: |
          if [ -z "${{ secrets.DEFECTDOJO_URL }}" ] || [ -z "${{ secrets.DEFECTDOJO_TOKEN }}" ]; then
            echo "❌ Missing required secrets."
            exit 1
          fi

      # 3. Test API Connectivity (Insecure SSL)
      - name: Test API Connectivity (Insecure SSL)
        run: |
          curl -vk "${{ secrets.DEFECTDOJO_URL }}/api/v2/system_settings/" \
            -H "Authorization: Token ${{ secrets.DEFECTDOJO_TOKEN }}" \
            -H "accept: application/json"

      # 4. Prepare Reports Folder
      - name: Create reports directory
        run: mkdir -p reports

      # 5. Run TruffleHog Git Scan
      - name: Run TruffleHog Git Scan
        run: |
          docker run --rm -v $PWD:/pwd ghcr.io/trufflesecurity/trufflehog:latest git file:///pwd --json > reports/trufflehog-raw.json || true

      # 6. Normalize JSON Output
      - name: Normalize TruffleHog JSON Output
        run: jq -s '.' reports/trufflehog-raw.json > reports/trufflehog-scan-report.json

      # 7. Create Product in DefectDojo
      - name: Create Product in DefectDojo
        run: |
          PRODUCT_NAME="TruffleHog Scan"
          PROD_TYPE_ID=1  # Adjust based on your DefectDojo Product Types
          curl -vk -X POST "${{ secrets.DEFECTDOJO_URL }}/api/v2/products/" \
            -H "Authorization: Token ${{ secrets.DEFECTDOJO_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d "{\"name\": \"${PRODUCT_NAME}\", \"description\": \"Automated product for TruffleHog scans.\", \"prod_type\": ${PROD_TYPE_ID}}"

      # 8. Create Engagement in DefectDojo
      - name: Create Engagement in DefectDojo
        run: |
          ENGAGEMENT_NAME="TruffleHog CI/CD Scans"
          PRODUCT_ID=$(curl -sk -X GET "${{ secrets.DEFECTDOJO_URL }}/api/v2/products/?name=TruffleHog%20Scan" \
            -H "Authorization: Token ${{ secrets.DEFECTDOJO_TOKEN }}" | jq '.results[0].id')
          curl -vk -X POST "${{ secrets.DEFECTDOJO_URL }}/api/v2/engagements/" \
            -H "Authorization: Token ${{ secrets.DEFECTDOJO_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d "{\"name\": \"${ENGAGEMENT_NAME}\", \"description\": \"Engagement for TruffleHog CI/CD secret scans.\", \"product\": ${PRODUCT_ID}, \"status\": \"In Progress\"}"

      # 9. Import Scan to DefectDojo
      - name: Upload TruffleHog Scan to DefectDojo
        run: |
          curl -vk -X POST "${{ secrets.DEFECTDOJO_URL }}/api/v2/import-scan/" \
            -H "Authorization: Token ${{ secrets.DEFECTDOJO_TOKEN }}" \
            -H "accept: application/json" \
            -F "scan_type=Generic Findings Import" \
            -F "product_name=TruffleHog Scan" \
            -F "engagement_name=TruffleHog CI/CD Scans" \
            -F "file=@reports/trufflehog-scan-report.json"
