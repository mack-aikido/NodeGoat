name: TruffleHog - Create Product and Engagement

on:
  push:
    branches:
      - '**'   # ✅ Trigger on all branches
  workflow_dispatch:  # ✅ Manual trigger

jobs:
  defectdojo-init:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout Code
      - name: Checkout code repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # ✅ Full history required for Git scan

      # 2. Validate Secrets
      - name: Validate Secrets
        run: |
          if [ -z "${{ secrets.DEFECTDOJO_URL }}" ] || [ -z "${{ secrets.DEFECTDOJO_TOKEN }}" ]; then
            echo "❌ Missing required secrets (DEFECTDOJO_URL or DEFECTDOJO_TOKEN)"
            exit 1
          fi
          echo "✅ Secrets present."

      # 3. Test API Connectivity
      - name: Test DefectDojo API Connectivity
        run: |
          curl -sk "${{ secrets.DEFECTDOJO_URL }}/api/v2/system_settings/" \
            -H "Authorization: Token ${{ secrets.DEFECTDOJO_TOKEN }}" \
            -H "accept: application/json"

      # 4. Create Reports Folder
      - name: Create reports directory
        run: mkdir -p reports

      # 5. Run TruffleHog Git Scan
      - name: Run TruffleHog Git Scan
        run: |
          docker run --rm -v $PWD:/pwd ghcr.io/trufflesecurity/trufflehog:latest git file:///pwd --json > reports/trufflehog-raw.json || true

      # 6. Create Product in DefectDojo
      - name: Create Product in DefectDojo
        run: |
          PRODUCT_NAME="TruffleHog Scan"
          PROD_TYPE_ID=1
          echo "Creating product '$PRODUCT_NAME'..."
          curl -sk -X POST "${{ secrets.DEFECTDOJO_URL }}/api/v2/products/" \
            -H "Authorization: Token ${{ secrets.DEFECTDOJO_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d "{
              \"name\": \"${PRODUCT_NAME}\",
              \"description\": \"Automated product for TruffleHog scans.\",
              \"prod_type\": ${PROD_TYPE_ID}
            }"

      # 7. Retrieve Product ID
      - name: Retrieve Product ID
        id: get-product
        run: |
          PRODUCT_ID=$(curl -sk "${{ secrets.DEFECTDOJO_URL }}/api/v2/products/?name=TruffleHog%20Scan" \
            -H "Authorization: Token ${{ secrets.DEFECTDOJO_TOKEN }}" | jq '.results[0].id')
          echo "product_id=$PRODUCT_ID" >> $GITHUB_OUTPUT

      # 8. Create Engagement in DefectDojo
      - name: Create Engagement in DefectDojo
        run: |
          ENGAGEMENT_NAME="TruffleHog CI/CD Scans"
          TODAY=$(date +%Y-%m-%d)
          curl -sk -X POST "${{ secrets.DEFECTDOJO_URL }}/api/v2/engagements/" \
            -H "Authorization: Token ${{ secrets.DEFECTDOJO_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d "{
              \"name\": \"${ENGAGEMENT_NAME}\",
              \"description\": \"Engagement for TruffleHog CI/CD secret scans.\",
              \"product\": ${{ steps.get-product.outputs.product_id }},
              \"status\": \"In Progress\",
              \"target_start\": \"${TODAY}\",
              \"target_end\": \"${TODAY}\"
            }"

      # 9. Upload Initial Scan to DefectDojo
      - name: Upload TruffleHog Report
        run: |
          curl -sk -X POST "${{ secrets.DEFECTDOJO_URL }}/api/v2/import-scan/" \
            -H "Authorization: Token ${{ secrets.DEFECTDOJO_TOKEN }}" \
            -H "accept: application/json" \
            -F "scan_type=Trufflehog Scan" \
            -F "product_name=TruffleHog Scan" \
            -F "engagement_name=TruffleHog CI/CD Scans" \
            -F "file=@reports/trufflehog-raw.json"

      # 10. Confirmation
      - name: Show Confirmation
        run: echo "✅ Product, engagement, and initial scan uploaded successfully."
