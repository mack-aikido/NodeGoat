name: DefectDojo SAST Scan Upload (OpenGrep - Auto Create Product & Engagement)

on:
  push:
    branches:
      - '**'
  workflow_dispatch:

jobs:
  defectdojo-opengrep-upload:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout Code
      - name: Checkout code repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      # 2. Validate Secrets
      - name: Validate Secrets
        run: |
          if [ -z "${{ secrets.DEFECTDOJO_URL }}" ]; then
            echo "❌ DEFECTDOJO_URL is missing!"
            exit 1
          fi
          if [ -z "${{ secrets.DEFECTDOJO_TOKEN }}" ]; then
            echo "❌ DEFECTDOJO_TOKEN is missing!"
            exit 1
          fi
          echo "✅ Secrets present."

      # 3. Test API Connectivity (Insecure SSL)
      - name: Test API Connectivity (Insecure SSL)
        run: |
          API_URL="${{ secrets.DEFECTDOJO_URL }}/api/v2/system_settings/"
          curl -vk $API_URL \
            -H "Authorization: Token ${{ secrets.DEFECTDOJO_TOKEN }}" \
            -H "accept: application/json"

      # 4. Create Reports Folder
      - name: Create reports directory
        run: mkdir -p reports

      # 5. Install OpenGrep from GitHub and Run
      - name: Install and Run OpenGrep
        run: |
          echo "Installing OpenGrep from GitHub..."
          git clone https://github.com/opengrep/opengrep.git
          cd opengrep
          pip install -r requirements.txt
          python opengrep.py --json ../ > ../reports/opengrep-report.json || true

      # 6. Create Product in DefectDojo
      - name: Create Product in DefectDojo
        run: |
          PRODUCT_NAME="Opengrep Scan"
          PROD_TYPE_ID=1
          curl -vk -X POST "${{ secrets.DEFECTDOJO_URL }}/api/v2/products/" \
            -H "Authorization: Token ${{ secrets.DEFECTDOJO_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d "{
              \"name\": \"${PRODUCT_NAME}\",
              \"description\": \"Automated product for OpenGrep SAST scans.\",
              \"prod_type\": ${PROD_TYPE_ID}
            }"

      # 7. Create Engagement in DefectDojo
      - name: Create Engagement in DefectDojo
        run: |
          ENGAGEMENT_NAME="Opengrep CI/CD SAST Scans"
          PRODUCT_ID=$(curl -sk -X GET "${{ secrets.DEFECTDOJO_URL }}/api/v2/products/?name=Opengrep%20Scan" \
            -H "Authorization: Token ${{ secrets.DEFECTDOJO_TOKEN }}" | jq '.results[0].id')
          TODAY=$(date +%Y-%m-%d)
          curl -vk -X POST "${{ secrets.DEFECTDOJO_URL }}/api/v2/engagements/" \
            -H "Authorization: Token ${{ secrets.DEFECTDOJO_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d "{
              \"name\": \"${ENGAGEMENT_NAME}\",
              \"description\": \"Engagement for OpenGrep SAST scans.\",
              \"product\": ${PRODUCT_ID},
              \"status\": \"In Progress\",
              \"target_start\": \"${TODAY}\",
              \"target_end\": \"${TODAY}\"
            }"

      # 8. Upload OpenGrep (Semgrep JSON Report) to DefectDojo
      - name: Upload OpenGrep Report to DefectDojo
        run: |
          curl -vk -X POST "${{ secrets.DEFECTDOJO_URL }}/api/v2/import-scan/" \
            -H "Authorization: Token ${{ secrets.DEFECTDOJO_TOKEN }}" \
            -H "accept: application/json" \
            -F "scan_type=Semgrep JSON Report" \
            -F "product_name=Opengrep Scan" \
            -F "engagement_name=Opengrep CI/CD SAST Scans" \
            -F "file=@reports/opengrep-report.json"

      # 9. Confirm Completion
      - name: Show Confirmation
        run: echo "✅ OpenGrep scan uploaded, product & engagement created successfully."
