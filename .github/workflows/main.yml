name: DefectDojo Scan Upload (All Branches)

on:
  push:
    branches:
      - '**'      # ✅ Trigger on all branches
  workflow_dispatch:  # ✅ Manual trigger support

jobs:
  defectdojo-upload:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout Code
      - name: Checkout code repository
        uses: actions/checkout@v2

      # 2. Validate Secrets (Fail early if missing)
      - name: Validate Secrets
        run: |
          if [ -z "${{ secrets.DEFECTDOJO_URL }}" ]; then
            echo "❌ DEFECTDOJO_URL is missing!"
            exit 1
          fi
          if [ -z "${{ secrets.DEFECTDOJO_TOKEN }}" ]; then
            echo "❌ DEFECTDOJO_TOKEN is missing!"
            exit 1
          fi
          echo "✅ Secrets present."

      # 3. Test DefectDojo API Connectivity
      - name: Test API Connectivity (URL)
        run: |
          API_URL="${{ secrets.DEFECTDOJO_URL }}/api/v2/system_settings/"
          echo "Testing API URL: $API_URL"
          curl -vk $API_URL \
            -H "Authorization: Token ${{ secrets.DEFECTDOJO_TOKEN }}" \
            -H "accept: application/json"

      # 4. Create Reports Folder
      - name: Create reports directory
        run: mkdir -p reports

      # 5. Run Trivy Scan (official action)
      - name: Run Trivy Scan
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: fs
          format: json
          output: reports/trivy-scan-report.json

      # 6. Upload Report to DefectDojo
      - name: Publish report to DefectDojo
        id: import-scan
        uses: ivanamat/defectdojo-import-scan@v1
        with:
          token: ${{ secrets.DEFECTDOJO_TOKEN }}
          defectdojo_url: ${{ secrets.DEFECTDOJO_URL }}
          file: reports/trivy-scan-report.json
          scan_type: Trivy Scan
          engagement: 1
          defectdojo_endpoint: /api/v2/import-scan/

      # 7. Show API Response
      - name: Show API response
        run: |
          echo "DefectDojo API Response:"
          printf '%s\n' '${{ steps.import-scan.outputs.response }}'
