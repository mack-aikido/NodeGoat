name: TruffleHog Reimport Scan

on:
  push:
    branches:
      - '**'         # ✅ Trigger on all branches
  workflow_dispatch: # ✅ Manual trigger

jobs:
  defectdojo-reimport:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout Repository
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # ✅ Full history required for TruffleHog git scan

      # 2. Validate Required Secrets
      - name: Validate Secrets
        run: |
          if [ -z "${{ secrets.DEFECTDOJO_URL }}" ]; then
            echo "❌ DEFECTDOJO_URL is missing!"
            exit 1
          fi
          if [ -z "${{ secrets.DEFECTDOJO_TOKEN }}" ]; then
            echo "❌ DEFECTDOJO_TOKEN is missing!"
            exit 1
          fi
          echo "✅ Secrets validated."

      # 3. Test DefectDojo API Connectivity
      - name: Test DefectDojo API
        run: |
          echo "Testing API endpoint: ${{ secrets.DEFECTDOJO_URL }}/api/v2/system_settings/"
          curl -s -o /dev/null -w "%{http_code}\n" \
            "${{ secrets.DEFECTDOJO_URL }}/api/v2/system_settings/" \
            -H "Authorization: Token ${{ secrets.DEFECTDOJO_TOKEN }}" \
            -H "accept: application/json"

      # 4. Create Reports Folder
      - name: Create reports directory
        run: mkdir -p reports

      # 5. Run TruffleHog Git Scan
      - name: Run TruffleHog Git Scan
        run: |
          echo "Running TruffleHog Git scan..."
          docker run --rm -v $PWD:/pwd ghcr.io/trufflesecurity/trufflehog:latest git file:///pwd --json > reports/trufflehog-scan-report.json || true

      # 6. Check TruffleHog Findings (Skip upload if empty)
      - name: Check for TruffleHog Findings
        id: check-findings
        run: |
          if ! grep -q '"DetectorName"' reports/trufflehog-scan-report.json; then
            echo "No findings detected. Skipping DefectDojo upload."
            echo "skip_upload=true" >> $GITHUB_OUTPUT
          fi

      # 7. Reimport Report into DefectDojo (Deduplicated)
      - name: Reimport Scan Report to DefectDojo
        if: steps.check-findings.outputs.skip_upload != 'true'
        run: |
          echo "Reimporting TruffleHog scan report to DefectDojo (deduplicated)..."
          curl -s -o response.json -w "%{http_code}\n" -X POST \
            "${{ secrets.DEFECTDOJO_URL }}/api/v2/reimport-scan/" \
            -H "Authorization: Token ${{ secrets.DEFECTDOJO_TOKEN }}" \
            -H "accept: application/json" \
            -F "scan_type=Trufflehog Scan" \
            -F "engagement=1" \
            -F "file=@reports/trufflehog-scan-report.json" \
            -F "test_title=Automated TruffleHog Reimport" \
            -F "deduplication_on_engagement=true"

      # 8. Show API Response
      - name: Show API Response
        if: steps.check-findings.outputs.skip_upload != 'true'
        run: |
          echo "✅ DefectDojo API response:"
          cat response.json
