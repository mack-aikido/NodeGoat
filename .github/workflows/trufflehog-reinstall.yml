name: TruffleHog - Deduplicated Reimport

on:
  push:
    branches:
      - '**'
  workflow_dispatch:

jobs:
  defectdojo-reimport:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout Repo
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # 2. Validate Secrets
      - name: Validate Secrets
        run: |
          if [ -z "${{ secrets.DEFECTDOJO_URL }}" ] || [ -z "${{ secrets.DEFECTDOJO_TOKEN }}" ]; then
            echo "❌ Missing required secrets"
            exit 1
          fi
          echo "✅ Secrets validated."

      # 3. Create Reports Folder
      - name: Create reports directory
        run: mkdir -p reports

      # 4. Run TruffleHog Scan
      - name: Run TruffleHog Git Scan
        run: |
          docker run --rm -v $PWD:/pwd ghcr.io/trufflesecurity/trufflehog:latest git file:///pwd --json > reports/trufflehog-scan-report.json || true

      # 5. Check Findings
      - name: Check for Findings
        id: check-findings
        run: |
          if ! grep -q '"DetectorName"' reports/trufflehog-scan-report.json; then
            echo "skip_upload=true" >> $GITHUB_OUTPUT
          fi

      # 6. Fetch Product and Engagement IDs
      - name: Fetch Product and Engagement IDs
        id: ids
        run: |
          PRODUCT_ID=$(curl -sk "${{ secrets.DEFECTDOJO_URL }}/api/v2/products/?name=TruffleHog%20Scan" \
            -H "Authorization: Token ${{ secrets.DEFECTDOJO_TOKEN }}" | jq '.results[0].id')

          ENGAGEMENT_ID=$(curl -sk "${{ secrets.DEFECTDOJO_URL }}/api/v2/engagements/?name=TruffleHog%20CI/CD%20Scans&product=$PRODUCT_ID" \
            -H "Authorization: Token ${{ secrets.DEFECTDOJO_TOKEN }}" | jq '.results[0].id')

          echo "product_id=$PRODUCT_ID" >> $GITHUB_OUTPUT
          echo "engagement_id=$ENGAGEMENT_ID" >> $GITHUB_OUTPUT

      # 7. Reimport Scan to Deduplicate
      - name: Reimport Scan Report
        if: steps.check-findings.outputs.skip_upload != 'true'
        run: |
          curl -s -o response.json -w "%{http_code}\n" -X POST \
            "${{ secrets.DEFECTDOJO_URL }}/api/v2/reimport-scan/" \
            -H "Authorization: Token ${{ secrets.DEFECTDOJO_TOKEN }}" \
            -H "accept: application/json" \
            -F "scan_type=Trufflehog Scan" \
            -F "product_id=${{ steps.ids.outputs.product_id }}" \
            -F "engagement=${{ steps.ids.outputs.engagement_id }}" \
            -F "file=@reports/trufflehog-scan-report.json" \
            -F "test_title=Automated TruffleHog Reimport" \
            -F "deduplication_on_engagement=true"

      # 8. Show API Response
      - name: Show API Response
        if: steps.check-findings.outputs.skip_upload != 'true'
        run: cat response.json
